openapi: 3.1.0
info:
  title: Book Store API
  description: A simple API for managing a book store inventory
  version: '1.0.0'
  contact:
    name: API Support
    email: support@bookstore.example
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.bookstore.example/v1
    description: Production server
  - url: https://dev-api.bookstore.example/v1
    description: Development server

paths:
  /books:
    get:
      summary: List all books
      description: Returns a list of books from the inventory
      operationId: listBooks
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
          description: Maximum number of books to return
        - name: genre
          in: query
          schema:
            type: string
          description: Filter books by genre
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      summary: Add a new book
      operationId: addBook
      requestBody:
        description: Book object to be added to the inventory
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBook'
      responses:
        '201':
          description: Book created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          $ref: '#/components/responses/BadRequest'

  /books/{bookId}:
    get:
      summary: Get book by ID
      operationId: getBookById
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: string
          description: ID of the book to retrieve
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    Book:
      type: object
      required:
        - id
        - title
        - author
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        author:
          type: string
        publishedDate:
          type: string
          format: date
        genre:
          type: string
        price:
          type: number
          format: float
    NewBook:
      type: object
      required:
        - title
        - author
      properties:
        title:
          type: string
        author:
          type: string
        publishedDate:
          type: string
          format: date
        genre:
          type: string
        price:
          type: number
          format: float
  responses:
    BadRequest:
      description: Bad request
    NotFound:
      description: Resource not found